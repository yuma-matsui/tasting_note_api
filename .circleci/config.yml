version: 2.1

executors:
  test_images:
    docker:
      - image: cimg/ruby:3.1.2-node
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: cimg/postgres:15.0
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust

commands:
  bundle_install:
    steps:
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-
      - run:
          command: |
            gem install bundler
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
  build_database:
    steps:
      - run:
          command: |
            dockerize -wait \
              tcp://${DB_HOST}:5432 -timeout 120s
      - run:
          command: bundle exec rails db:create
      - run:
          command: bundle exec rails db:migrate
  save_test_results:
    steps:
      - run:
          command: mkdir /tmp/test-results
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /home/circleci/repo/tmp/screenshots

jobs:
  build_and_test:
    executor: test_images
    parallelism: 2
    working_directory: ~/repo
    steps:
      - checkout
      - bundle_install
      - run:
          name: rubocop
          command: bundle exec rubocop
      - build_database
      - run:
          name: RSpec
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
              || (printf "==== RETRYING...\n\n\n"; bundle exec rspec --only-failures)
      - save_test_results

workflows:
  test:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore: main
